Turbo Assembler	 Version 4.1	    01/01/02 00:41:43	    Page 1
symbol.asm



      1				     ;-----------------------------------------------------------
      2				     ; Пример вывода символа.
      3				     ;-----------------------------------------------------------
      4	0000			     model small
      5	0000			     .data
      6	0000  80 E1 E1 A5 AC A1	AB+  message db	'Ассемблер - базовый язык компьютера',0
      7	      A5 E0 20 2D 20 A1	A0+
      8	      A7 AE A2 EB A9 20	EF+
      9	      A7 EB AA 20 AA AE	AC+
     10	      AF EC EE E2 A5 E0	A0+
     11	      00
     12	0024  0A 0D 80 E1 E1 A5	AC+  msg db 0ah,0dh,'Ассемблер - базовый язык компьютера'
     13	      A1 AB A5 E0 20 2D	20+
     14	      A1 A0 A7 AE A2 EB	A9+
     15	      20 EF A7 EB AA 20	AA+
     16	      AE AC AF EC EE E2	A5+
     17	      E0 A0
     18	      =0025		     len=$-msg
     19	0049			     .code
     20	0000			     start:
     21	0000  B8 0000s			     mov     ax,@data		     ; связываем регистр ds с сегментом
     22	0003  8E D8			     mov     ds,ax		     ;	     данных через регистр ax
     23
     24	0005  B2 21			     mov     dl,'!'		     ; '!' - выводимый на экран	символ
     25	0007  E8 001F			     call    Out_symbol		     ; вызов подпрограммы
     26
     27	000A  BE 0000r			     lea     si, message	     ; адрес строки
     28	000D				 .loop:
     29	000D  AC			     lodsb			     ; в al - очередной	символ
     30	000E  0A C0			     or	     al,al		     ; al=0 ?
     31	0010  74 07			     jz	     .done		     ;	     да.
     32	0012  8A D0			     mov     dl,al		     ;	     нет. В dl - очередной символ
     33	0014  E8 0012			     call    Out_symbol		     ; вызов подпрограммы
     34	0017  EB F4			     jmp     .loop
     35	0019				 .done:
     36
     37	0019  B9 0025			     mov     cx,len		     ; кол-во повторений цикла
     38	001C  BE 0024r			     lea     si,msg		     ; адрес строки
     39	001F  B4 02			     mov     ah,02h		     ; функция вывода символа на экран
     40	0021  E8 000A			     call    out$		     ; вызов подпрограммы
     41
     42	0024  B8 4C00			     mov     ax,4c00h		     ; 4c00h - код функции для стандартного
     43									     ;	      выхода
     44	0027  CD 21			     int     21h		     ; стандартный выход
     45
     46				     ;############################
     47	0029			     Out_symbol	     proc		     ; подпрограмма
     48	0029  B4 02			     mov     ah,02h		     ; 02h - код функции для вывода символа
     49	002B  CD 21			     int     21h		     ; вывод символа на	экран
     50	002D  C3			     ret			     ; возвращение в вызывающую	программу
     51	002E			     Out_symbol	     endp
     52				     ;############################
     53	002E			     out$    proc			     ; подпрограмма
     54	002E  8A 14			     mov     dl,[si]		     ; в dl - очередной	символ
     55	0030  CD 21			     int     21h		     ; вывод символа на	экран
     56	0032  46			     inc     si			     ; увеличение адреса
     57	0033  E2 F9			     loop    out$
Turbo Assembler	 Version 4.1	    01/01/02 00:41:43	    Page 2
symbol.asm



     58	0035  C3			     ret			     ; возвращение в вызывающую	программу
     59	0036			     out$    endp
     60				     ;############################
     61
     62				     end     start
Turbo Assembler	 Version 4.1	    01/01/02 00:41:43	    Page 3
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

.DONE			Near   _TEXT:0019		   31  #35
.LOOP			Near   _TEXT:000D		   #28	34
??DATE			Text   "01/01/02"
??FILENAME		Text   "symbol	"
??TIME			Text   "00:41:43"
??VERSION		Number 040A
@32BIT			Text   0			   #4
@CODE			Text   _TEXT			   #4  #4  #19
@CODESIZE		Text   0			   #4
@CPU			Text   0101H
@CURSEG			Text   _TEXT			   #5  #19
@DATA			Text   DGROUP			   #4  21
@DATASIZE		Text   0			   #4
@FILENAME		Text   SYMBOL
@INTERFACE		Text   000H			   #4
@MODEL			Text   2			   #4
@STACK			Text   DGROUP			   #4
@WORDSIZE		Text   2			   #5  #19
LEN			Number 0025			   #18	37
MESSAGE			Byte   DGROUP:0000		   #6  27
MSG			Byte   DGROUP:0024		   #12	18  38
OUT$			Near   _TEXT:002E		   40  #53  57
OUT_SYMBOL		Near   _TEXT:0029		   25  33  #47
START			Near   _TEXT:0000		   #20	62

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

DGROUP			Group				   #4  4  21
  _DATA			16  0049 Word	Public	DATA	   #4  #5
_TEXT			16  0036 Word	Public	CODE	   #4  4  #19  19
