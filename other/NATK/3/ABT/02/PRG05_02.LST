Turbo Assembler	 Version 4.1	    27/04/11 13:48:26	    Page 1
prg05_02.asm



      1				     ;--------------------------------------------------------------------
      2				     ;	     Пример программы
      3				     ;--------------------------------------------------------------------
      4	0000			     data    segment para public 'data'	     ; начало сегмента данных
      5									     ; para - сегмент начинается по адресу
      6									     ;	       кратному	16
      7									     ; public -	объединять все сегменты	с
      8									     ;		 одинаковым именем 'data'
      9	0000  82 A2 A5 A4 A8 E2	A5+  message1	     db	     'Введите любой символ: $'
     10	      20 AB EE A1 AE A9	20+
     11	      E1 A8 AC A2 AE AB	3A+
     12	      20 24
     13	0017  0A 0D 82 EB 20 A2	A2+  message2	     db	     0ah,0dh,'Вы ввели символ: $'
     14	      A5 AB A8 20 E1 A8	AC+
     15	      A2 AE AB 3A 20 24
     16	002B  82 A2 A5 A4 A8 E2	A5+  message3	     db	     'Введите любую строку: $'
     17	      20 AB EE A1 E3 EE	20+
     18	      E1 E2 E0 AE AA E3	3A+
     19	      20 24
     20	0042  0A 0D 82 EB 20 A2	A2+  message4	     db	     0ah,0dh,'Вы ввели строку: $'
     21	      A5 AB A8 20 E1 E2	E0+
     22	      AE AA E3 3A 20 24
     23	0056			     parlist label   byte    ;Список параметров
     24	0056  4F		     maxlen  db	     79		     ;максимальная длина значения
     25	0057  ??		     actlen  db	     ?		     ;фактически введенная длина
     26	0058  50*(00)		     value   db	     80	dup(0)	     ;введенное	значение
     27	00A8  ??		     char	     db	     ?
     28	00A9			     data    ends			     ; конец сегмента данных
     29
     30	0000			     stk     segment stack		     ; начало сегмента стека
     31	0000  0100*(3F)			     db	     256 dup('?')
     32	0100			     stk     ends			     ; конец сегмента стека
     33
     34	0000			     code    segment para public 'code'	     ; начало сегмента кода
     35					     assume  cs:code,ds:data,ss:stk
     36	0000			     main    proc			     ; точка входа(основная процедура)
     37	0000  B8 0000s			     mov     ax,data		     ; связываем регистр ds с сегментом
     38	0003  8E D8			     mov     ds,ax		     ;	     данных через регистр ax
     39
     40	0005  B4 09			     mov     ah,09h		     ; 09h - код функции для вывода строки,
     41									     ;	     которая заканчивается '$'
     42	0007  BA 0000r			     mov     dx,offset message1	     ; адрес начала строки
     43	000A  CD 21			     int     21h		     ; вывод строки на экран
     44
     45	000C  B4 10			     mov     ah,10h		      ;	01h - код функции для ввода символа
     46	000E  CD 16			     int     16h		     ; ввод символа с клавиатуры
     47	0010  88 0E 00A8r		     mov     char,cl		     ; сохранение введенного символа в памяти
     48	0014  50		     push    ax				     ; сохранение введенного символа в стеке
     49
     50	0015  B4 09			     mov     ah,09h		     ; 09h - код функции для вывода строки
     51	0017  BA 0017r			     mov     dx,offset message2	     ; адрес начала строки
     52	001A  CD 21			     int     21h		     ; вывод строки на экран
     53
     54	001C  58		     pop     ax				     ; восстановление из стека введенного
     55									     ;	     символа
     56				     ;	     mov     ah,2h		     ; 02h - код функции для вывода символа
     57									     ;	     на	экран
Turbo Assembler	 Version 4.1	    27/04/11 13:48:26	    Page 2
prg05_02.asm



     58	001D  8A D0			     mov     dl,al		     ; значение	символа
     59	001F  E8 0005			     call    Out$
     60				     ;	     int     21h		     ; вывод символа на	экран
     61
     62	0022  B8 4C00			     mov     ax,4c00h		     ; 4c00h - код функции для стандартного
     63									     ;	      выхода
     64	0025  CD 21			     int 21h			     ; стандартный выход
     65
     66
     67	0027			     main    endp
     68				     ;##############################
     69	0027			     Out$    proc
     70	0027  B4 02			     mov     ah,02h		     ; 02h - код функции для вывода символа
     71	0029  CD 21			     int     21h		     ; вывод символа на	экран
     72	002B  C3			     ret			     ; возвращение в вызывающую	программу
     73	002C			     Out$    endp
     74				     ;##############################
     75	002C			     code    ends			     ; конец сегмента кода
     76				     end     main
Turbo Assembler	 Version 4.1	    27/04/11 13:48:26	    Page 3
Symbol Table




Symbol Name		Type   Value			   Cref	(defined at #)

??DATE			Text   "27/04/11"
??FILENAME		Text   "prg05_02"
??TIME			Text   "13:48:26"
??VERSION		Number 040A
@CPU			Text   0101H
@CURSEG			Text   CODE			   #4  #30  #34
@FILENAME		Text   PRG05_02
@WORDSIZE		Text   2			   #4  #30  #34
ACTLEN			Byte   DATA:0057		   #25
CHAR			Byte   DATA:00A8		   #27	47
MAIN			Near   CODE:0000		   #36	76
MAXLEN			Byte   DATA:0056		   #24
MESSAGE1		Byte   DATA:0000		   #9  42
MESSAGE2		Byte   DATA:0017		   #13	51
MESSAGE3		Byte   DATA:002B		   #16
MESSAGE4		Byte   DATA:0042		   #20
OUT$			Near   CODE:0027		   59  #69
PARLIST			Byte   DATA:0056		   #23
VALUE			Byte   DATA:0058		   #26

Groups & Segments	Bit Size Align	Combine	Class	   Cref	(defined at #)

CODE			16  002C Para	Public	CODE	   #34	35
DATA			16  00A9 Para	Public	DATA	   #4  35  37
STK			16  0100 Para	Stack		   #30	35
